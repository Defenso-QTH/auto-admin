#!/bin/sh -e

##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf 'Press return to continue...'
    read junk
}

##########################################################################
#   Script description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2014-11-18  Jason Bacon Begin
#                           Based on Jim Wagner's node-discover
##########################################################################

usage()
{
    cat << EOM

Usage: $0 base-name digits domain

Example:

    $0 compute 3 meadows.local ==>
	compute-001.meadows.local
	compute-002.meadows.local
	...
	
    $0 raid 2 bigcluster.party.edu ==>
	raid-02.bigcluster.party.edu
	raid-03.bigcluster.party.edu
	...

EOM
    exit 1
}


##########################################################################
#   Function description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2014-11-18  Charlie &   Begin
##########################################################################

leases()
{
    if [ $# != 1 ]; then
	printf 'Usage: leases filename\n'
	exit 1
    fi
    file=$1
    for dhcp_file in /var/db/dhcpd/dhcpd.leases /var/lib/dhcpd/dhcpd.leases; do
	if [ -e $dhcp_file ]; then
	    break
	fi
    done
    
    # FIXME: Detect multiple leases with the same IP or MAC
    awk '$1 == "lease" { print $2 }' $dhcp_file | sort -n -t . -k 4 | uniq > $file
    wc -l $file | awk ' { print $1 }'
}


##########################################################################
#   Main
##########################################################################

if [ $# != 3 ]; then
    usage
fi

base_name="$1"
digits=$2
domain=$3

if ! fgrep "$base_name" /etc/hosts; then
    default_serial_number=1
else
    default_serial_number=''
fi
printf "Next serial number? [$default_serial_number] "
read serial_number
if [ 0$serial_number = 0 ]; then
    serial_number=$default_serial_number
fi

#service inetd onestart

again='y'
while [ 0$again = 0y ]; do
    initial_leases=`leases initial-leases`
    
    # Debug
    vi initial-leases
    initial_leases=`wc -l initial-leases | awk ' { print $1 }'`
    
    cat << EOM

Press return NOW, then PXE boot ONE MACHINE, NO MORE!!!

The new machine should be detected as soon as it gets a DHCP lease.

EOM
    leases=`leases leases`
    printf 'Waiting for another lease to appear...\n'
    while [ $leases = $initial_leases ]; do
	sleep 2
	leases=`leases leases`
	printf '.'
    done

    new_ip=`comm -13 initial-leases leases`
    printf 'New lease detected: %s.\n' $new_ip
    
    if fgrep -wq $new_ip /etc/hosts; then
	printf "Error: $new_ip already exists in /etc/hosts!\n"
	#exit 1
    fi

    hwaddr=`awk -v new_ip=$new_ip '$1 == "lease" && $2 == new_ip {
	do
	{
	    getline
	}   while ( $1 != "hardware" );
	print $3
	exit
    }' /var/lib/dhcpd/dhcpd.leases | cut -d ';' -f 1`

    printf "$hwaddr\n"
    
    default_host_name=`printf "$base_name%0${digits}d.%s" $serial_number $domain`
    printf "Host name? [$default_host_name] "
    read host_name
    if [ 0$host_name = 0 ]; then
	host_name=$default_host_name
    fi
    short_name=${host_name%%.*}
    printf "$short_name\n"
    
    conf=/etc/dhcp/dhcpd.conf
    if ! fgrep -w $host_name $conf; then
	sed -i '/option domain-name-servers/ a\\n    host '"$host_name"' {\n\thardware ethernet '"$hwaddr"';\n\toption host-name \"'"$host_name"'\";\n\tfixed-address '"$new_ip"';\n    }' $conf
    fi
    vi $conf
    service dhcpd restart
    
    if [ ! -e /etc/ssh/ssh_config.orig ];then
	cp /etc/ssh/ssh_config /etc/ssh/ssh_config.orig
    fi
    
    if [ ! `fgrep -wq $host_name /etc/ssh/ssh_config | awk '{print $1}'` ];then    
	sed -i '2iHost '"$short_name"' ' /etc/ssh/ssh_config
	sed -i '3i\\tStrictHostKeyChecking no' /etc/ssh/ssh_config
	sed -i '2iHost '"$host_name"' ' /etc/ssh/ssh_config
	sed -i '3i\\tStrictHostKeyChecking no' /etc/ssh/ssh_config
	sed -i '4iHost '"$new_ip"' ' /etc/ssh/ssh_config
	sed -i '5i\\tStrictHostKeyChecking no' /etc/ssh/ssh_config
    fi
    
    # Add to /etc/hosts.
    auto-append-line $new_ip "$new_ip\t$host_name\t${host_name%%.*}" \
	/etc/hosts nocomment
    
    # Debug
    vi -c '$' /etc/hosts
    
    printf 'Image another server? [n] '
    read again
    
    serial_number=$(($serial_number + 1))
done

#service inetd onestop

