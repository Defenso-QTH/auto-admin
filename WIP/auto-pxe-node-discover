#!/bin/sh -e

##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf 'Press return to continue...'
    read junk
}

##########################################################################
#   Script description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2014-11-18  Jason Bacon Begin
#                           Based on Jim Wagner's node-discover
##########################################################################

usage()
{
    cat << EOM

Usage: $0 base-name digits domain

Example:

    $0 compute 3 meadows.local ==>
	compute-001.meadows.local
	compute-002.meadows.local
	...
	
    $0 raid 2 bigcluster.party.edu ==>
	raid-02.bigcluster.party.edu
	raid-03.bigcluster.party.edu
	...

EOM
    exit 1
}


##########################################################################
#   Function description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2014-11-18  Charlie &   Begin
##########################################################################

##########################################################################
#   Main
##########################################################################

if [ $# != 3 ]; then
    usage
fi

base_name="$1"
digits=$2
domain=$3

for lease_file in /var/db/dhcpd/dhcpd.leases /var/lib/dhcpd/dhcpd.leases; do
    if [ -e $lease_file ]; then
	break
    fi
done
if [ -z $lease_file ]; then
    printf 'Error: No dhcpd.leases found!\n'
    exit 1
fi

for dhcp_conf in /usr/local/etc/dhcpd.conf /etc/dhcp/dhcpd.conf; do
    if [ -e $dhcp_conf ]; then
	break
    fi
done
if [ -z $dhcp_conf ]; then
    printf 'Error: No dhcpd.conf found!\n'
    exit 1
fi

if ! fgrep "$base_name" /etc/hosts; then
    default_serial_number=1
else
    default_serial_number=''
fi

printf "Next serial number? [$default_serial_number] "
read serial_number
if [ 0$serial_number = 0 ]; then
    serial_number=$default_serial_number
fi

# Restart the service to clean up outdated leases
if [ `uname` = FreeBSD ]; then
    dhcp_service=isc-dhcpd
    sed=gsed
elif [ -e /etc/redhat-release ]; then
    dhcp_service=dhcpd
    sed=sed
else
    printf 'Only FreeBSD and CentOS are supported at this time.\n'
    exit 1
fi
service $dhcp_service restart

again='y'
while [ 0$again = 0y ]; do

    leases=`awk '$1 == "lease" { print $2 }' $lease_file | sort -n -t . -k 4 | uniq`
    
    for new_ip in $leases; do
    
	# Already recorded?
	if ! egrep -q "^$new_ip" /etc/hosts; then
	
	    # Get lease state from dhcpd.leases
	    state=`awk -v ip=$new_ip '$2 == ip {
		do
		{
		    getline
		}   while ( $1 != "binding" || $2 != "state" );
		print $3;
	    }'  $lease_file`
	    
	    # Active leases not already in /etc/hosts must be added
	    if [ $state = 'active;' ]; then
		hwaddr=`awk -v new_ip=$new_ip '$1 == "lease" && $2 == new_ip {
		    do
		    {
			getline
		    }   while ( $1 != "hardware" );
		    print $3
		    exit
		}' $lease_file | cut -d ';' -f 1`
	    
		printf '\nNew lease detected: %s %s.\n' $new_ip $hwaddr
		
		default_host_name=`printf "$base_name%0${digits}d.%s" $serial_number $domain`
		printf "Host name? [$default_host_name] "
		read host_name
		if [ 0$host_name = 0 ]; then
		    host_name=$default_host_name
		fi
		short_name=${host_name%%.*}
		printf "$short_name\n"
		
		if ! fgrep -w $host_name $dhcp_conf; then
		    $sed -i '/option domain-name-servers/ a\\n    host '"$host_name"' {\n\thardware ethernet '"$hwaddr"';\n\toption host-name \"'"$host_name"'\";\n\tfixed-address '"$new_ip"';\n    }' $dhcp_conf
		fi
		vi $dhcp_conf
		service $dhcp_service restart
		
		if [ ! -e /etc/ssh/ssh_config.orig ];then
		    cp /etc/ssh/ssh_config /etc/ssh/ssh_config.orig
		fi
		
		if [ ! `fgrep -wq $host_name /etc/ssh/ssh_config | awk '{print $1}'` ];then    
		    $sed -i '2iHost '"$short_name"' ' /etc/ssh/ssh_config
		    $sed -i '3i\\tStrictHostKeyChecking no' /etc/ssh/ssh_config
		    $sed -i '4iHost '"$host_name"' ' /etc/ssh/ssh_config
		    $sed -i '5i\\tStrictHostKeyChecking no' /etc/ssh/ssh_config
		    $sed -i '6iHost '"$new_ip"' ' /etc/ssh/ssh_config
		    $sed -i '7i\\tStrictHostKeyChecking no' /etc/ssh/ssh_config
		fi
		vi /etc/ssh/ssh_config
		
		# Add to /etc/hosts.
		auto-append-line '^$new_ip' "$new_ip\t$host_name\t${host_name%%.*}" \
		    /etc/hosts nocomment
		
		# Debug
		vi -c '$' /etc/hosts
		serial_number=$(($serial_number + 1))
	    fi
	fi
    done
    
    printf 'Image another server? [n] '
    read again
done

