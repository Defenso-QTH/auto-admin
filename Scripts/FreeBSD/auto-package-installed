#!/bin/sh

##########################################################################
#   Script description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2012-01-08  Jason Bacon Begin
##########################################################################

usage()
{
    printf "Usage: $0 [-p ports-dir] category/port\n"
    exit 1
}

##########################################################################
#   Main
##########################################################################

case $# in
1)
    port=$1
    ;;
3)
    if [ $1 != '-p' ]; then
	usage
    else
	port=$3
    fi
    ;;
*)
    usage
    ;;
esac

if [ `echo $port | awk -F / ' { print NF }'` != 2 ]; then
    usage
fi

name=`auto-print-make-variable $* PKGNAME`
if [ $? != 0 ]; then
    printf "$name"
    exit 2
fi
major_name=`echo $name | cut -d '.' -f 1`
# echo $major_name

if [ ! -e /usr/sbin/pkg ] || ! auto-using-pkgng; then
    # Using old pkg_*

    # cluster-local-port-add sends the exact package name, so check for
    # name without appending -[0-9]*
    if [ -d /var/db/pkg/${name} ]; then
	printf "$name is installed.\n"
	return 0;
    elif [ -d /var/db/pkg/${major_name}* ]; then
	installed=$(basename $(ls -d /var/db/pkg/${major_name}*))
	printf "$installed is installed (not the version in your ports tree).\n"
	return 0;
    else
	printf "$name is not installed.\n"
	return 1;
    fi
else
    # Using new pkgng system
    if pkg info ${name} > /dev/null 2>&1; then
	printf "$name is installed.\n"
	return 0;
    elif pkg info $major_name > /dev/null 2>&1; then
	installed=`pkg info $major_name | cut -d ' ' -f 1`
	if [ $installed != $name ]; then
	    printf "$installed is installed (not the version in your ports tree).\n"
	fi
    else
	printf "$name is not installed.\n"
	return 1;
    fi
fi

