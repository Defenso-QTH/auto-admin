#!/bin/sh -e
    
case $(auto-ostype) in
FreeBSD)
    if [ $# != 1 ]; then
	cat << EOM
    Usage: $0 S1|S2|S3|S4|S5|NONE
    Run "man acpi" for more information.
    EOM
	exit 1
    fi
    
    state=$1
    
    # Enable suspend on lid-close
    # hw.acpi.lid_switch_state exists whether or not computer has a lid
    if ! sysctl hw.acpi.supported_sleep_state | fgrep -q $state && \
	[ $state != 'NONE' ]; then
	printf "$state is not a supported state.\n"
	exit 1
    fi
    
    # FIXME: Not a clean removal - may leave comments from append-line
    fgrep -v lid_switch_state /etc/sysctl.conf > /etc/sysctl.conf.auto-set-suspend-mode
    mv -f /etc/sysctl.conf.auto-set-suspend-mode /etc/sysctl.conf
    auto-append-line lid_switch_state "hw.acpi.lid_switch_state=$state" \
	/etc/sysctl.conf $0
    sysctl hw.acpi.lid_switch_state=$state
    
    exit
    
    # FIXME: The code below is currently unmaintained
    # FIXME: Run this for all suspend events, not just suspend on lid
    if [ $state = S3 ]; then
	# Remove exit commands and append new ones later
	sed -i '' '/^exit/d' /etc/rc.suspend /etc/rc.resume
	
	# Shut down network services before suspend
	for service in amd; do
	    for rcdir in /etc/rc.d /usr/local/etc/rc.d; do
		if [ -e $rcdir/$service ]; then
		    auto-append-line $rcdir/$service "/etc/rc.d/$service stop" \
			/etc/rc.suspend $0
		fi
	    done
	done
    
	# Unload risky device drivers
	for dev in ng_ubt netgraph ng_hci ng_bluetooth cuse4bsd; do
	    if kldstat | grep -q $dev; then
		auto-append-line "kldunload $dev" \
		    "kldunload $dev" /etc/rc.suspend $0
	    fi
	done
	
	# Reload risky device drivers
	for dev in cuse4bsd ng_bluetooth ng_hci netgraph ng_ubt; do
	    if kldstat | grep -q $dev; then
		auto-append-line "kldload $dev" \
		    "kldload $dev" /etc/rc.resume $0
	    fi
	done
	
	# Reconnect network before enabling services
	auto-append-line '^/usr/sbin/wpa_cli reassociate' \
	    '/usr/sbin/wpa_cli reassociate' /etc/rc.resume $0
	
	# Start up network services in opposite order they were shut down
	for service in amd; do
	    for rcdir in /etc/rc.d /usr/local/etc/rc.d; do
		if [ -e $rcdir/$service ]; then
		    auto-append-line $rcdir/$service "/etc/rc.d/$service start" \
			/etc/rc.resume $0
		fi
	    done
	done
	    
	printf "exit 0\n" >> /etc/rc.suspend
	printf "exit 0\n" >> /etc/rc.resume
    fi
    ;;
    
*)
    printf "$0: Not supported on $(ostype).\n"
    exit 1
    ;;

esac
