#!/bin/sh -e

##########################################################################
#   Script description:
#       Set up a PXE install server including dhcpd, tftpf, and nfsd.
#       Primary references:
#       http://www.ixsystems.com/whats-new/freebsd-unattended-installation-of-servers/
#       http://www.wonkity.com/~wblock/docs/html/pxe.html
#       http://www.smtps.net/pxe-kickstart.html
#       https://people.redhat.com/sgrubb/files/usgcb/rhel5/workstation-ks.cfg
#
#   Arguments:
#       Name of ISO image to install.
#
#   Returns:
#       NA
#
#   History:
#   Date        Name        Modification
#   2014-11-15  Jason Bacon Begin
#                           Based on Jim Wagner's kickstart-server-setup
#                           and my own FreeBSD auto-pxe-installer-setup
##########################################################################

usage()
{
    printf "Usage: $0 file.iso\n"
    exit 1
}


##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}


##########################################################################
#   Function description:
#       Print a line
##########################################################################

line()
{
    printf '================================================================\n'
}


##########################################################################
#   Function description:
#       Set up tftp via Linux xinetd
#
#   Arguments:
#       NA
#
#   Returns:
#       NA
#
#   History:
#   Date        Name        Modification
#   2014-11-18  Jason Bacon Begin
##########################################################################

tftp_pxelinux_setup()
{
    local conf
    
    # FIXME: Skip if already installed
    yum install -y syslinux xinetd tftp-server

    tftpboot=/var/lib/tftpboot
    mkdir -p $tftpboot/pxelinux.cfg
    cp /usr/share/syslinux/pxelinux.0 $tftpboot
    cp /usr/share/syslinux/menu.c32 $tftpboot
    cp /usr/share/syslinux/reboot.c32 $tftpboot

    # Create a simple PXELINUX boot menu
    conf=$tftpboot/pxelinux.cfg/default
    cat << EOM > $conf
# 600 centiseconds = 60 seconds
timeout 600
ui menu.c32
menu title CentOS PXE Installer Boot Menu

label localboot
  menu label Boot from local disk
  localboot

label install
  menu label Install CentOS
  kernel images/$installer_leaf_dir/images/pxeboot/vmlinuz
  append initrd=images/$installer_leaf_dir/images/pxeboot/initrd.img ksdevice=$iface load_ramdisk=1 network ks=nfs:${local_ip}:/$installer_path/ks.cfg

label reboot
  menu label Reboot
  kernel reboot.c32
EOM
    
    printf "Editing $conf\n"
    pause
    $EDITOR $conf

    # Enable tftpd
    conf='/etc/xinetd.d/tftp'
    if [ ! -e $conf.orig ]; then
	cp $conf $conf.orig
    fi
    sed -i '/disable/ c\\tdisable\t\t\t= no' /etc/xinetd.d/tftp

    printf "Make sure no other tftp servers are running.\n"
    pause

    chkconfig xinetd on
    service xinetd restart
}


##########################################################################
#   Function description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2015-12-16  root        Begin
##########################################################################

nfs_setup()
{
    printf "Configure NFS? [y]/n "
    read resp
    if [ 0$resp != 0n ]; then
	yum install -y nfs-utils
	
	# FIXME: Use proper mask
	auto-append-line "$prefix/images $subnet/$netmask(ro)" /etc/exports $0
	
	cat << EOM
	
Editing /etc/exports.  Make sure your syntax is correct and that you are
properly handling mount points within the same partition.

EOM
	pause
	$EDITOR /etc/exports
	
	# Make sure everything is readable!
	chmod -R a+rX $installer_path
	
	chkconfig rpcbind on
	chkconfig nfslock on
	chkconfig nfs on
	
	service rpcbind restart
	service nfslock restart
	service nfs restart
	exportfs -rv
    fi
    return 0
}


##########################################################################
#   Function description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2015-12-16  root        Begin
##########################################################################

dhcp_setup()
{
    cat << EOM

PXE booting requires a DHCP server on the local network.  You can run it
on this server or use the DHCP server provided by the network router or
other device.

***************************************************************************
*                                WARNING                                  *
* DO NOT ENABLE A DHCP SERVER ON THIS HOST UNLESS YOU MANAGE THE NETWORK  *
* AND KNOW WHAT YOU'RE DOING.  ENABLING A "ROGUE" DHCP SERVER CAN CAUSE   *
* SERIOUS PROBLEMS FOR OTHER USERS ON THE NETWORK.                        *
***************************************************************************

EOM
    printf "Configure dhcpd on this host? (y/[n]) "
    read dhcpd
    
    if [ 0$dhcpd = 0y ]; then
	if [ ! -e /usr/sbin/dhcpd ]; then
	    yum install -y dhcp
	fi
    
	cat << EOM

Note: Your original dhcpd.conf (from before the first pxe-server-setup)
run will be saved to dhcpd.conf.orig and your current dhcpd.conf will
be overwritten.

If you don't like this idea, press Ctrl+C now.

EOM
	pause
    
	domain=`auto-ask pxe-domain 'Domain name?' 'local'`
	router=`auto-ask pxe-router 'Router?' 192.168.0.1`
	nameserver=`auto-ask pxe-nameserver 'Name server?' 192.168.0.1`
	# Reserve 192.168.1.* through 192.168.10.* for static IPs by default
	first_address=`auto-ask pxe-first-dhcp 'First DHCP address?' 192.168.1.1`
	last_address=`auto-ask pxe-last-dhcp 'Last DHCP address?' 192.168.63.255`
	# Default lease time 20 years (effectively permanent)
	lease_time=`auto-ask pxe-lease 'Lease time (seconds)?' '630720000'`
    
	conf='/etc/dhcp/dhcpd.conf'
	if [ ! -e $conf.orig ]; then
	    cp $conf $conf.orig
	fi
	boot_filename=gpxelinux.0
	
#
# DHCP Server Configuration file.
#   see /usr/share/doc/dhcp*/dhcpd.conf.sample
#   see 'man 5 dhcpd.conf'
#

# Example from Avi produced by kickstart-server-setup
# option domain-name    "hpc.uwm.edu";
# option domain-name-servers   newavi1.hpc.uwm.edu;
# default-lease-time    -1;
# max-lease-time    -1;
# authoritative;
# subnet 192.168.1.0 netmask 255.255.255.0 {
#     range dynamic-bootp 192.168.1.2 192.168.1.200;
#     use-host-decl-names on;
#     option broadcast-address 192.168.1.255;
#     option domain-name-servers 129.89.192.168, 129.89.10.2;
#     option routers 192.168.1.253;
# 
#     host compute-5-36 {
#         hardware ethernet 00:26:b9:2e:21:3c;
#         option host-name "compute-5-36";
#         fixed-address 192.168.1.143;
#     }
# filename    "pxelinux.0";
# next-server    192.168.1.253;
    
	cat << EOM > $conf
allow booting;
allow bootp;
authoritative;
option domain-name "$domain";
option subnet-mask $netmask;
option routers $router;
ddns-update-style none;
log-facility local7;
local-address $local_ip;
subnet $subnet netmask $netmask
{
    range $first_address $last_address;
    default-lease-time $lease_time;
    max-lease-time $lease_time;
    
    # IP of PXE server required by some clients.
    next-server $local_ip;
    
    # Location of PXE boot image within bootable system
    filename "pxelinux.0";
    
    # Location of bootable system for NFS
    option root-path "$installer_path";
    option domain-name-servers $nameserver;
}
EOM
	cat << EOM

Editing $conf.

Double-check the addresses, etc.

EOM
	pause
	$EDITOR $conf
    
	# Make the DHCP server only serve to private iface's subnet
	sed -i '/DHCPDARGS/ c\DHCPDARGS=$iface' /etc/sysconfig/dhcpd
	
	service dhcpd restart
	#chkconfig dhcpd on
    else
	cat << EOM

You will need to manually configure your DHCP server to point to this PXE
server.

EOM
	# FIXME: Unfinished
	# Set up for situations where the DHCP server is not running on
	# this server.  ( e.g. DHCP is handled by a hardware router. )
	# pkg install -y pxe-pdhcp
	# pxe-pdhcp -i bge0
	# What else?
    fi
}


##########################################################################
#   Main
##########################################################################

if [ $# != 1 ]; then
    usage
fi

if [ -z $EDITOR ]; then
    EDITOR=vi
fi

iso="$1"
if [ ! -e $iso ]; then
    printf "$iso: No such file.\n"
    exit 1
fi

line
df -h
cat << EOM

Your PXE installation directory must be on a partition with enough space
to contain the contents of your install CD or DVD.

EOM
prefix=`auto-ask pxe-prefix 'Prefix for PXE installation files?' /var/lib/tftpboot`
installer_leaf_dir=${iso%.iso}
installer_leaf_dir=${installer_leaf_dir##*/}
installer_path=$prefix/images/${installer_leaf_dir}

printf 'Available network interfaces:\n\n'
ip addr 2> /dev/null | egrep 'mtu|inet'
iface=`auto-ask pxe-iface '\nNetwork interface?' ''`
default_ip=`ip addr 2> /dev/null show dev $iface | \
    awk '$1 == "inet" { print $2 }' | cut -d / -f 1`
local_ip=`auto-ask pxe-local-ip 'IP address of this server?' $default_ip`

# Needed by both dhcp_setup and nfs_setup
# FIXME: CentOS 7 needs octets, not bit count
default_mask=`ip address show dev $iface 2> /dev/null | \
    awk '$1 == "inet" { print $2 }' | cut -d / -f 2`
default_mask='255.255.128.0'
subnet=`auto-ask pxe-subnet 'Subnet?' 192.168.0.0`
netmask=`auto-ask pxe-netmask 'Net mask?' $default_mask`

##########################################################################
#   Set up dhcpd
##########################################################################

line
dhcp_setup

##########################################################################
#   Set up tftp
##########################################################################

# Must come after dhcp setup, which sets variables used here
line
tftp_pxelinux_setup

##########################################################################
#   Copy install media to server
##########################################################################

if ! which rsync; then
    yum install -y rsync
fi
mkdir -p $prefix/mnt
if ! mount -t iso9660 -o loop $iso $prefix/mnt; then
    printf "CD already mounted.\n"
fi
mkdir -p $installer_path
rsync -av $prefix/mnt/ $installer_path
chmod -R a-w,a+rX $installer_path
umount $prefix/mnt

# Set root password in install media?
# No can do unless it's a live filesystem.
# chroot $installer_path root

# FIXME: Should not be necessary if $installer_path is under $tftpboot
#mkdir -p $tftpboot/$installer_leaf_dir
#cp $installer_path/images/pxeboot/vmlinuz $tftpboot/$installer_leaf_dir
#cp $installer_path/images/pxeboot/initrd.img $tftpboot/$installer_leaf_dir

##########################################################################
#   Set up NFS
##########################################################################

nfs_setup

##########################################################################
#   Set up ssh keys to new server here and in kickstart script
##########################################################################

# Add root ssh key from this server to be placed on new node
if [ ! -e /root/.ssh/id_rsa.pub ]; then
    ssh-keygen -f /root/.ssh/id_rsa -N ''
fi
root_key="`cat /root/.ssh/id_rsa.pub`"
restorecon -R -v /root/.ssh     # Set security context for selinux


##########################################################################
#   Kickstart
##########################################################################

yum install -y pykickstart
ksconfig=$installer_path/ks.cfg
root_pw="`awk -F : '$1 == \"root\" { print $2 }' /etc/shadow`"

printf "Time zone? [America/Chicago] "
read time_zone
if [ 0$time_zone = 0 ]; then
    time_zone='America/Chicago'
fi

# RHEL/CentOS 6 cannot boot from xfs, while 7 defaults to it
if fgrep 'release 6' /etc/redhat-release; then
    boot_fs=ext4
else
    boot_fs=xfs
fi

cat << EOM > $ksconfig
# auto-pxe-linux-setup kickstart file

install
# ncurses mode
text
# terminal mode
# (CentOS 6.6 minimal fails with "In interactive step tasksel can't continue")
# cmdline
autostep
reboot
nfs --server $local_ip --dir $installer_path

lang en_US.UTF-8
keyboard us

network --device $iface --onboot yes --bootproto dhcp
firewall --enabled --service=ssh
authconfig --enableshadow --passalgo=sha512
rootpw --iscrypted "$root_pw"
timezone --utc $time_zone
bootloader --location=mbr --driveorder=sda
selinux --permissive

# Use whole disk
zerombr
clearpart --all

############################################################################
# Minimal partition scheme suitable for a single-user workstation
# Adjust swap size to taste

# part swap --size=4096
# part / --fstype $boot_fs --size=1024 --grow

############################################################################
# Secure server config, allows partitions writable by users
# (/var, /tmp, /home) to be mounted with nosuid.

part /boot --fstype $boot_fs --size=1024
part swap --size=4096
part / --fstype $boot_fs --size=32768
part /var --fstype $boot_fs --size=32768
part /tmp --fstype $boot_fs --size=32768

# For typical machines and head nodes, use all remaining space for /home
# part /home --fstype $boot_fs --size=1024 --grow

# For nodes with /home NFS-mounted, such as compute nodes, don't allocate
# local disk space for /home.
part /bigtmp --fstype xfs --size=1024 --grow

%post

# Anything done here can more easily be done after the first reboot, so
# I like to keep it minimal.

# Allow passwordless root login from the image server after first boot
sed -i'' 's|#PermitRootLogin yes|PermitRootLogin without-password|g' /etc/ssh/sshd_config
if [ ! -e /root/.ssh/id_rsa.pub ]; then
    ssh-keygen -f /root/.ssh/id_rsa -N ''
fi
printf "$root_key\n" >> /root/.ssh/authorized_keys
chmod 600 /root/.ssh/authorized_keys
restorecon -R -v /root/.ssh     # Set security context for selinux

# Boot into a secure system right off the bat!
# Need to enable em0 first?
yum update -y
yum clean all

%end
EOM

chmod 755 $ksconfig
sed -i '/%packages/,$d' $ksconfig
printf "Editing kickstart config file.\n"
pause

$EDITOR $ksconfig
