#!/bin/sh -e

##########################################################################
#   Script description:
#       Set up a PXE install server including dhcpd, tftpf, and nfsd.
#       Primary references:
#       http://www.ixsystems.com/whats-new/freebsd-unattended-installation-of-servers/
#       man bsdinstall
#       http://www.wonkity.com/~wblock/docs/html/pxe.html
#       http://www.smtps.net/pxe-kickstart.html
#
#   Arguments:
#       Name of ISO image to install.
#
#   Returns:
#       NA
#
#   History:
#   Date        Name        Modification
#   2014-11-15  Jason Bacon Begin
#                           Based on Jim Wagner's kickstart-server-setup
#                           and my own FreeBSD auto-pxe-installer-setup
##########################################################################

# Test file to paste into command:
# /home/bacon/CentOS-6.6-x86_64-minimal.iso

usage()
{
    printf "Usage: $0 file.iso\n"
    exit 1
}


##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}


##########################################################################
#   Function description:
#       Print a line
##########################################################################

line()
{
    printf '================================================================\n'
}


##########################################################################
#   Function description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2014-11-18  Jason Bacon Begin
##########################################################################

tftp_xinetd()
{
    # FIXME: Skip if already installed
    yum install -y syslinux xinetd tftp-server

    tftpboot=/var/lib/tftpboot
    mkdir -p $tftpboot/pxelinux.cfg
    cp /usr/share/syslinux/pxelinux.0 $tftpboot
    cp /usr/share/syslinux/menu.c32 $tftpboot
    cp /usr/share/syslinux/reboot.c32 $tftpboot

    # Create a simple PXELINUX boot menu
    conf=$tftpboot/pxelinux.cfg/default
    cat << EOM > $conf
timeout 600
ui menu.c32
menu title PXELINUX Boot Menu

label localboot
  menu label Boot from local disk
  localboot

label install
  menu label Install CentOS 6
  kernel $installer_dir/vmlinuz
  append initrd=$installer_dir/initrd.img ksdevice=$iface load_ramdisk=1 network ks=nfs:$local_ip:/$installer_path/ks.cfg

label reboot
  menu label Reboot
  kernel reboot.c32
EOM
    
    printf "Editing $conf\n"
    pause
    vi $conf

    conf='/etc/xinetd.d/tftp'
    if [ ! -e $conf.orig ]; then
	cp $conf $conf.orig
    fi
    
    # Enable tftp
    if [ ! -f /etc/xinetd.d/tftp.orig ]; then
	cp /etc/xinetd.d/tftp /etc/xinetd.d/tftp.orig
    fi
    sed -i '/disable/ c\\tdisable\t\t\t= no' /etc/xinetd.d/tftp

    printf "Make sure no other tftp servers are running.\n"
    pause

    service xinetd restart
    chkconfig xinetd on
}


##########################################################################
#   Main
##########################################################################

if [ $# != 1 ]; then
    usage
fi

iso="$1"
if [ ! -e $iso ]; then
    printf "$iso: No such file.\n"
    exit 1
fi

line
df -h
cat << EOM

Your PXE installation directory must be on a partition with enough space
to contain the contents of your install CD or DVD.

EOM
prefix=`auto-ask pxe-prefix 'Prefix for PXE installation files?' /pxeserver`
installer_dir=${iso%.iso}
installer_dir=${installer_dir##*/}
installer_path=$prefix/images/${installer_dir}

##########################################################################
#   Set up dhcpd
##########################################################################

line
cat << EOM

PXE booting requires a DHCP server on the local network.  You can run it
on this server or use the DHCP server provided by the network router or
other device.

***************************************************************************
*                                WARNING                                  *
* DO NOT ENABLE A DHCP SERVER ON THIS HOST UNLESS YOU MANAGE THE NETWORK  *
* AND KNOW WHAT YOU'RE DOING.  ENABLING A "ROGUE" DHCP SERVER CAN CAUSE   *
* SERIOUS PROBLEMS FOR OTHER USERS ON THE NETWORK.                        *
***************************************************************************

EOM
printf "Run dhcpd on this host? ([y]/n) "
read dhcpd

if [ 0$dhcpd != 0n ]; then
    if [ ! -e /usr/sbin/dhcpd ]; then
	yum install -y dhcp
    fi

    cat << EOM

Note: Your original dhcpd.conf (from before the first pxe-server-setup)
run will be saved to dhcpd.conf.orig and your current dhcpd.conf will
be overwritten.

If you don't like this idea, press Ctrl+C now.

EOM
    pause
    printf 'Available network interfaces:\n\n'
    ifconfig 2> /dev/null | egrep 'HWaddr|inet'
    iface=`auto-ask pxe-iface '\nNetwork interface?' ''`

    default_ip=`ifconfig 2> /dev/null $iface | awk '$1 == "inet" {print $2}' | cut -d : -f 2`
    default_mask=`ifconfig 2> /dev/null $iface | awk '$1 == "inet" {print $4}' | cut -d : -f 2`

    domain=`auto-ask pxe-domain 'Domain name?' 'local'`
    subnet=`auto-ask pxe-subnet 'Subnet?' 10.1.0.0`
    netmask=`auto-ask pxe-netmask 'Net mask?' $default_mask`
    router=`auto-ask pxe-router 'Router?' 10.1.1.1`
    nameserver=`auto-ask pxe-nameserver 'Name server?' 10.1.1.1`
    local_ip=`auto-ask pxe-local-ip 'IP address of this DHCP server?' $default_ip`
    # Reserve 10.1.1.* through 10.1.10.* for static IPs by default
    first_address=`auto-ask pxe-first-dhcp 'First DHCP address?' 10.1.11.1`
    last_address=`auto-ask pxe-last-dhcp 'Last DHCP address?' 10.1.254.254`
    # Default lease time 10 years (effectively permanent for cluster nodes)
    lease_time=`auto-ask pxe-lease 'Lease time (seconds)?' '315360000'`

    conf='/etc/dhcp/dhcpd.conf'
    if [ ! -e $conf.orig ]; then
	cp $conf $conf.orig
    fi
    boot_filename=gpxelinux.0
    
#
# DHCP Server Configuration file.
#   see /usr/share/doc/dhcp*/dhcpd.conf.sample
#   see 'man 5 dhcpd.conf'
#

# Example from Avi produced by kickstart-server-setup
# option domain-name    "hpc.uwm.edu";
# option domain-name-servers   newavi1.hpc.uwm.edu;
# default-lease-time    -1;
# max-lease-time    -1;
# authoritative;
# subnet 10.1.1.0 netmask 255.255.255.0 {
#     range dynamic-bootp 10.1.1.2 10.1.1.200;
#     use-host-decl-names on;
#     option broadcast-address 10.1.1.255;
#     option domain-name-servers 129.89.10.1, 129.89.10.2;
#     option routers 10.1.1.253;
# 
#     host compute-5-36 {
#         hardware ethernet 00:26:b9:2e:21:3c;
#         option host-name "compute-5-36";
#         fixed-address 10.1.1.143;
#     }
# filename    "pxelinux.0";
# next-server    10.1.1.253;

    cat << EOM > $conf
allow booting;
allow bootp;
authoritative;
option domain-name "$domain";
option subnet-mask $netmask;
option routers $router;
ddns-update-style none;
log-facility local7;
local-address $local_ip;
subnet $subnet netmask $netmask
{
    range $first_address $last_address;
    default-lease-time $lease_time;
    max-lease-time $lease_time;
    
    # IP of PXE server required by some clients.
    next-server $local_ip;
    
    # Location of PXE boot image within bootable system
    filename "pxelinux.0";
    
    # Location of bootable system for NFS
    option root-path "$installer_path";
    option domain-name-servers $nameserver;
}
EOM
    cat << EOM

Editing $conf.

Double-check the addresses, etc.

EOM
    pause
    vi $conf

    # Make the DHCP server only serve to private iface's subnet
    sed -i '/DHCPDARGS/ c\DHCPDARGS=$iface' /etc/sysconfig/dhcpd
    
    service dhcpd restart
    #chkconfig dhcpd on
else
    echo 'Hello!'
    # FIXME: Unfinished
    # Set up for situations where the DHCP server is not running on
    # this server.  ( e.g. DHCP is handled by a hardware router. )
    # pkg install -y pxe-pdhcp
    # pxe-pdhcp -i bge0
    # What else?
fi

##########################################################################
#   Set up tftp
##########################################################################

line
tftp_xinetd

##########################################################################
#   Network-install
##########################################################################

yum install -y rsync
mkdir -p $prefix/mnt
if ! mount -t iso9660 -o loop $iso $prefix/mnt; then
    printf "CD already mounted.\n"
fi
mkdir -p $installer_path
rsync -av $prefix/mnt/ $installer_path
chmod -R a-w,a+rX $installer_path
umount $prefix/mnt

# Set root password in install media
# chroot $installer_path root

# From kickstart-server-setup
# Why?
mkdir -p $tftpboot/$installer_dir
cp $installer_path/images/pxeboot/vmlinuz $tftpboot/$installer_dir
cp $installer_path/images/pxeboot/initrd.img $tftpboot/$installer_dir

##########################################################################
#   Set up NFS
##########################################################################

yum install -y nfs-utils

# FIXME: Use proper mask
auto-append-line "$prefix/images $subnet/24(ro)" \
    /etc/exports $0

cat << EOM

Editing /etc/exports.  Make sure your syntax is correct and that you are
using -alldirs on the parent of any directories in the same partition.

EOM
pause
vi /etc/exports

# Add root ssh key from this server to new node
if [ ! -e /root/.ssh/id_dsa.pub ]; then
    ssh-keygen -t dsa -f /root/.ssh/id_dsa -N ''
fi
root_key=`cat /root/.ssh/id_dsa.pub`

# Create automated install script
cat << EOM

Opening install script.

Edit partitions, distributions, etc. to taste.

EOM
pause
# vi $installerconfig

# Make sure everything is readable!
chmod -R a+rX $installer_path
# chmod 640 $installerconfig      # Will contain an ssh public key

chkconfig rpcbind on
chkconfig nfslock on
chkconfig nfs on

service rpcbind restart
service nfslock restart
service nfs restart
exportfs -rv

##########################################################################
#   Kickstart
##########################################################################

ksconfig=$installer_path/ks.cfg

cat << EOM > $ksconfig
# Kickstart file automatically generated by anaconda.

install
autostep
reboot
nfs --server $local_ip --dir $installer_path
zerombr

lang en_US.UTF-8
keyboard us

network --device $iface --onboot yes --bootproto dhcp
firewall --enabled --service=ssh
authconfig --enableshadow --enablemd5
rootpw changeme
timezone --utc America/Chicago
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet"

# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work

clearpart --all --initlabel
clearpart --linux --drives=sda
part swap --size=1024
part / --fstype ext4 --size=1024 --grow

# part /boot --fstype ext4 --size=1024
# part swap --size=1024
# part / --fstype ext4 --size=16384 --grow
# part swap --size=32768
# part /var --fstype ext4 --size=32768
# part /tmp --fstype ext4 --size=32768
# part /data --fstype ext4 --size=1024 --grow

%post

# FIXME: selinux is preventing keys from working.
sed -i'' 's|#PermitRootLogin yes|PermitRootLogin without-password|g' /etc/ssh/sshd_config
if [ ! -e /root/.ssh/id_dsa.pub ]; then
    ssh-keygen -t dsa -f /root/.ssh/id_dsa -N ''
fi
echo '$root_key' >> /root/.ssh/authorized_keys
chmod 600 /root/.ssh/authorized_keys
EOM

# cp /root/node-ks-post /var/www/html/
# chmod 755 /var/www/html/node-ks-post

# New SHA-512 style passwords
#PSSWD=`grub-crypt`
#sed -i '/rootpw/ c\rootpw --iscrypted '"$PSSWD"'' $ksconfig 

sed -i '/%packages/,$d' $ksconfig 
vi $ksconfig

