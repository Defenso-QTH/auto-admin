#!/bin/sh -e

##########################################################################
#   Script description:
#       Set up a PXE install server including dhcpd, tftpf, and nfsd.
#       Primary references:
#       http://www.ixsystems.com/whats-new/freebsd-unattended-installation-of-servers/
#       man bsdinstall
#       http://www.wonkity.com/~wblock/docs/html/pxe.html
#
#   Arguments:
#       Name of ISO image to install.
#
#   Returns:
#       NA
#
#   History:
#   Date        Name        Modification
#   2014-11-15  Jason Bacon Begin
#                           Based on Jim Wagner's kickstart-server-setup
##########################################################################

# Test file to paste into command:
# CentOS-6.6-x86_64-minimal.iso

usage()
{
    printf "Usage: $0 file.iso\n"
    exit 1
}


##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}


##########################################################################
#   Function description:
#       Print a line
##########################################################################

line()
{
    printf '================================================================\n'
}


##########################################################################
#   Function description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2014-11-18  Jason Bacon Begin
##########################################################################

tftp_xinetd()
{
    # FIXME: Skip if already installed
    yum install -y syslinux xinetd tftp-server

    tftp_prefix=/var/lib/tftpboot
    mkdir -p $tftp_prefix/pxelinux.cfg
    cp /usr/share/syslinux/pxelinux.0 $tftp_prefix

    # Create a simple PXELINUX boot menu
    conf=$tftp_prefix/pxelinux.cfg/default
    cat << EOM > $conf
timeout 600
ui menu.c32
menu title PXELINUX Boot Menu

label localboot
  menu label Boot from local disk
  localboot

label reboot
  menu label Reboot
  kernel reboot.c32
EOM
    
    printf "Editing $conf\n"
    pause
    vi $conf

    conf='/etc/xinetd.d/tftp'
    if [ ! -e $conf.orig ]; then
	cp $conf $conf.orig
    fi
    
    # Enable tftp
    if [ ! -f /etc/xinetd.d/tftp.orig ]; then
	cp /etc/xinetd.d/tftp /etc/xinetd.d/tftp.orig
    fi
    sed -i '/disable/ c\\tdisable\t\t\t= no' /etc/xinetd.d/tftp

    printf "Make sure no other tftp servers are running.\n"
    pause

    service xinetd restart
    chkconfig xinetd on
}


##########################################################################
#   Main
##########################################################################

if [ $# != 1 ]; then
    usage
fi

iso="$1"
if [ ! -e $iso ]; then
    printf "$iso: No such file.\n"
    exit 1
fi

line
df -h
cat << EOM

Your PXE installation directory must be on a partition with enough space
to contain the contents of your install CD or DVD.

EOM
prefix=`auto-ask pxe-prefix 'Prefix for PXE installation files?' /pxeserver`
installer_path=${iso%.iso}
installer_path=$prefix/images/${installer_path##*/}


##########################################################################
#   Set up tftp
##########################################################################

line
tftp_xinetd

##########################################################################
#   Set up dhcpd
##########################################################################

line
cat << EOM

PXE booting requires a DHCP server on the local network.  You can run it
on this server or use the DHCP server provided by the network router or
other device.

***************************************************************************
*                                WARNING                                  *
* DO NOT ENABLE A DHCP SERVER ON THIS HOST UNLESS YOU MANAGE THE NETWORK  *
* AND KNOW WHAT YOU'RE DOING.  ENABLING A "ROGUE" DHCP SERVER CAN CAUSE   *
* SERIOUS PROBLEMS FOR OTHER USERS ON THE NETWORK.                        *
***************************************************************************

EOM
printf "Run dhcpd on this host? ([y]/n) "
read dhcpd

if [ 0$dhcpd != 0n ]; then
    if [ ! -e /usr/sbin/dhcpd ]; then
	yum install -y dhcp
    fi

    cat << EOM

Note: Your original dhcpd.conf (from before the first pxe-server-setup)
run will be saved to dhcpd.conf.orig and your current dhcpd.conf will
be overwritten.

If you don't like this idea, press Ctrl+C now.

EOM
    pause
    printf 'Available network interfaces:\n\n'
    ifconfig 2> /dev/null | egrep 'HWaddr|inet'
    iface=`auto-ask pxe-iface '\nNetwork interface?' ''`

    default_ip=`ifconfig 2> /dev/null $iface | awk '$1 == "inet" {print $2}' | cut -d : -f 2`
    default_mask=`ifconfig 2> /dev/null $iface | awk '$1 == "inet" {print $4}' | cut -d : -f 2`

    domain=`auto-ask pxe-domain 'Domain name?' 'local'`
    subnet=`auto-ask pxe-subnet 'Subnet?' 10.1.0.0`
    netmask=`auto-ask pxe-netmask 'Net mask?' $default_mask`
    router=`auto-ask pxe-router 'Router?' 10.1.1.1`
    nameserver=`auto-ask pxe-nameserver 'Name server?' 10.1.1.1`
    local_ip=`auto-ask pxe-local-ip 'IP address of this DHCP server?' $default_ip`
    # Reserve 10.1.1.* through 10.1.10.* for static IPs by default
    first_address=`auto-ask pxe-first-dhcp 'First DHCP address?' 10.1.11.1`
    last_address=`auto-ask pxe-last-dhcp 'Last DHCP address?' 10.1.254.254`
    # Default lease time 10 years (effectively permanent for cluster nodes)
    lease_time=`auto-ask pxe-lease 'Lease time (seconds)?' '315360000'`

    conf='/etc/dhcp/dhcpd.conf'
    if [ ! -e $conf.orig ]; then
	cp $conf $conf.orig
    fi
    
    boot_filename=gpxelinux.0
    
    exit
    
    cat << EOM > $conf
allow booting;
allow bootp;
authoritative;
option domain-name "$domain";
option subnet-mask $netmask;
option routers $router;
default-lease-time $lease_time;
max-lease-time $lease_time;
ddns-update-style none;
log-facility local7;
local-address $local_ip;
subnet $subnet netmask $netmask
{
    range $first_address $last_address;
    # IP of PXE server required by some clients.
    next-server $local_ip;
    # Location of PXE boot image within bootable system
    filename "$boot_filename";
    # Location of bootable system for NFS
    option root-path "$installer_path";
    option domain-name-servers $nameserver;
}
EOM
    cat << EOM

Editing $conf.

Double-check the addresses, etc.

EOM
    pause
    vi $conf
    
    auto-append-line 'dhcpd_enable="YES"' /etc/rc.conf $0
    auto-append-line 'dhcpd_ifaces="'$iface'"' /etc/rc.conf $0
    service isc-dhcpd onerestart
else
    # FIXME: Unfinished
    # Set up for situations where the DHCP server is not running on
    # this server.  ( e.g. DHCP is handled by a hardware router. )
    pkg install -y pxe-pdhcp
    # pxe-pdhcp -i bge0
    # What else?
fi


##########################################################################
#   Set up NFS
##########################################################################

auto-append-line "$prefix/images -alldirs,ro -network $subnet -mask $netmask" \
    /etc/exports $0

cat << EOM

Editing /etc/exports.  Make sure your syntax is correct and that you are
using -alldirs on the parent of any directories in the same partition.

EOM
pause
vi /etc/exports

if [ ! -e $installer_path ]; then
    mkdir -p $installer_path
    tar -C $installer_path -pxvf $iso
    chroot $installer_path passwd root
fi

if [ ! -e $installer_path/usr/sbin/bsdinstall ]; then
    cat << EOM

Warning: $0 only supports bsdinstall.

Did not find $installer_path/usr/sbin/bsdinstall.

We can continue, but you're on your own as far as setting up unattended
installation.

EOM
    pause
fi

# Prevent mount_nfs: no <host>:<dirpath> nfs-name error during boot
# https://wiki.koumbit.net/FreeBsd/PxeBootConfiguration
if [ -e $installer_path/etc/fstab ]; then
    mv $installer_path/etc/fstab $installer_path/etc/fstab.hide
fi

# Hack to get around resolution issue with 10.1-RELEASE
rm -f $installer_path/etc/resolv.conf
echo "nameserver $nameserver" > $installer_path/etc/resolv.conf

# Add root ssh key from this server to new node
if [ ! -e /root/.ssh/id_dsa.pub ]; then
    ssh-keygen -t dsa -f /root/.ssh/id_dsa -N ''
fi
root_key=`cat /root/.ssh/id_dsa.pub`

# Create automated install script
# man bsdinstall lacks an explanation of PARTITIONS
# http://www.sysadminwiki.net/site/doku.php/os/bsd/freebsd/automating_freebsd_installations
installerconfig=$installer_path/etc/installerconfig

cat << EOM > $installerconfig
PARTITIONS="ada0 { 4G freebsd-swap, auto freebsd-ufs / }"
DISTRIBUTIONS="base.txz doc.txz games.txz kernel.txz lib32.txz ports.txz src.txz"

#!/bin/sh
#
# If you want to unplug the keyboard and display before installation
# completes and never come back, remove all interactive commands
# below, like pkg install, read hostname, tzsetup.
#
# The new node will accept passwordless root login from this host via ssh
# after the first reboot, so you can immediately run more post-install
# options over the network.  If you are running DHCP on this host, the IP
# addresses of all imaged hosts will be in /var/db/dhcpd/dhcpd.leases.
# If your netowrk supports it, the hostname should also self-register in DNS.

# Installing any packages here will require another interaction with the
# new node after installation.  The first run of 'pkg' requires keyboard
# input to confirm initialization.  ( yes | pkg will not work )
#
# pkg install -y rsync

##########################################################################
#   Set a hostname
##########################################################################

# Use IP as hostname if you don't care.
hostname=\`ifconfig | awk '\$1 == "inet" { print \$2 }' | grep -v 127.0.0 | sed -e 's|\.|-|g'\`'.local'

# Interactive option
# printf "Hostname? "
# read hostname

echo "hostname=\$hostname" >> /etc/rc.conf

##########################################################################
#   Set time zone
##########################################################################

cp /usr/share/zoneinfo/America/Chicago /etc/localtime

# Interactive option
# tzsetup

# Set all available interfaces to DHCP for now.
for iface in \`dmesg | awk '\$2 == "Ethernet" { print \$1 }'\`; do
    iface=\${iface%:}
    echo "ifconfig_\$iface=DHCP" >> /etc/rc.conf
done

# Configure basic services.  Most configuration can be done after reboot, but
# a few basics here will save a little hassle.
echo 'sshd_enable=YES' >> /etc/rc.conf
echo 'ntpd_enable=YES' >> /etc/rc.conf
echo 'ntpdate_enable=YES' >> /etc/rc.conf
echo 'ntpdate_flags="-u pool.ntp.org"' >> /etc/rc.conf
echo 'dumpdev=NO' >> /etc/rc.conf

sed -i '' 's|#PermitRootLogin no|PermitRootLogin without-password|g' /etc/ssh/sshd_config
mkdir -p /root/.ssh
echo '$root_key' >> /root/.ssh/authorized_keys

touch /etc/fstab

EOM

cat << EOM

Opening installerconfig automated install script.

Edit partitions, distributions, etc. to taste.

EOM
pause
vi $installerconfig

# Make sure everything is readable!
chmod -R a+rX $installer_path
chmod 640 $installerconfig      # Will contain an ssh public key

auto-append-line 'rpcbind_enable="YES"' /etc/rc.conf $0
auto-append-line 'mountd_enable="YES"' /etc/rc.conf $0
auto-append-line 'nfs_server_enable="YES"' /etc/rc.conf $0
service nfsd restart
service mountd reload

